{
	"info": {
		"_postman_id": "098f48c3-562b-454c-8679-db25e9cb05d5",
		"name": "FOI",
		"description": "Collection used in FOI Postman's workshop.",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "1. vjezba - GET request i dokumentacija",
			"item": [
				{
					"name": "GetObjects",
					"id": "803e37f4-2944-4f68-b228-033ceaa522b4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/objects",
						"description": "This endpoint makes an HTTP GET request to retrieve a list of objects.\n\n### Request Body\n\nThis request does not require a request body.\n\n### Parameters\n\nThis request does not require any parameter.\n\n### Response\n\n- Status: 200\n    \n- Content-Type: application/json\n    \n\nThe response body returns an array of objects, each containing an \"id\", \"name\", and \"data\" object with \"color\" and \"capacity\" properties.\n\n##### Example response:\n\n``` json\n[\n    {\n        \"id\": \"1\",\n        \"name\": \"Google Pixel 6 Pro\",\n        \"data\": {\n            \"color\": \"Cloudy White\",\n            \"capacity\": \"128 GB\"\n        }\n    },\n    ...\n]\n\n ```"
					},
					"response": []
				},
				{
					"name": "GetSingleObject",
					"id": "b3261d04-9323-4ba1-8838-b6c07abd474d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/objects/:object_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"objects",
								":object_id"
							],
							"variable": [
								{
									"key": "object_id",
									"value": "ff80818191c06f6b0191c111a7010205"
								}
							]
						},
						"description": "This endpoint requests an HTTP GET to retrieve information about a specific object identified by its object_id. The purpose of this request is to fetch details of the object.\n\n### Request Body\n\nThis request does not require a request\n\n### Parameters\n\n- `object_id` (in the URL path): The unique identifier of the object for which the details are being fetched.\n    \n\n### Response\n\n- Status: 200\n    \n- Content-Type: application/json\n    \n\nThe response body will contain the details of the object, including its ID, name, and data that describes that object.\n\n##### Example response:\n\n``` json\n{\n    \"id\": \"3\",\n    \"name\": \"Apple iPhone 12 Pro Max\",\n    \"data\": {\n        \"color\": \"Cloudy White\",\n        \"capacity GB\": 512\n    }\n}\n\n ```"
					},
					"response": []
				}
			],
			"id": "c0c59178-6a16-47a0-af06-79ba927fd77a",
			"description": "Documentation for FOI Postman workshop's 1st exercise"
		},
		{
			"name": "2. vjezba - POST i PATCH/PUT request",
			"item": [
				{
					"name": "CreateObject",
					"id": "14f92896-28c9-412c-9702-ea1053999267",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"name\": \"Apple MacBook Pro 14\",\n   \"data\": {\n      \"year\": 2019,\n      \"price\": 1849.99,\n      \"CPU model\": \"Intel Core i9\",\n      \"Hard disk size\": \"1 TB\"\n   }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/objects",
						"description": "This endpoint allows you to create a new object.\n\n### Request Body\n\n- `name` (string, required): The object's name.\n    \n- `data` (object, required): Additional data for the object including year, price, CPU model, and hard disk size.\n    \n\n### Response\n\n- Status: 200\n    \n- Content-Type: application/json\n    \n\nThe response body will contain the details of the object, including its ID, name, and some data that describes that object.\n\n##### Example response:\n\n``` json\n{\n    \"id\": \"ff80818191b6f0300191b783d8790271\",\n    \"name\": \"Apple MacBook Pro 16\",\n    \"createdAt\": \"2024-09-03T10:52:36.858+00:00\",\n    \"data\": {\n        \"year\": 2019,\n        \"price\": 1849.99,\n        \"CPU model\": \"Intel Core i9\",\n        \"Hard disk size\": \"1 TB\"\n    }\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "UpdateObject",
					"id": "51fcf4bc-3cad-4074-8512-ea62ddf7ca31",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"name\": \"Apple MacBook Pro X\",\n   \"data\": {\n      \"year\": 2018,\n      \"price\": 1849.99,\n      \"CPU model\": \"Intel Core i9\",\n      \"Hard disk size\": \"1 TB\"\n   }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/objects/:object_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"objects",
								":object_id"
							],
							"variable": [
								{
									"key": "object_id",
									"value": "ff80818191c06f6b0191c111a7010205"
								}
							]
						},
						"description": "This endpoint allows the client to update an object by providing the object's ID in the URL path and the updated object details in the request body.\n\n### Request Body\n\n- `name` (string, required): The object's name.\n    \n- `data` (object, required): Additional data for the object including year, price, CPU model, and hard disk size.\n    \n    - `\"data\": { \"year\": \"number\", \"price\": \"number\", \"CPU model\": \"string\", \"Hard disk size\": \"string\" }`\n        \n\n### Response\n\n- Status: 200\n    \n- Content-Type: application/json\n    \n\nThe response body will contain the details of the object, including its ID, name, and some data that describes that object.\n\n##### Example response:\n\n``` json\n{\n    \"id\": \"ff80818191b6f0300191b783d8790271\",\n    \"name\": \"Apple MacBook Pro 16\",\n    \"createdAt\": \"2024-09-03T10:52:36.858+00:00\",\n    \"data\": {\n        \"year\": 2019,\n        \"price\": 1849.99,\n        \"CPU model\": \"Intel Core i9\",\n        \"Hard disk size\": \"1 TB\"\n    }\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "PartiallyUpdateObject",
					"id": "66f075a8-95f6-4e0a-b386-7690bca9638b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"name\": \"Apple MacBook Pro 16 (Updated Name)\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/objects/:object_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"objects",
								":object_id"
							],
							"variable": [
								{
									"key": "object_id",
									"value": "ff80818191c06f6b0191c111a7010205"
								}
							]
						},
						"description": "This endpoint is used to partially update an object with the specified ID.\n\n#### Request Body\n\n- `name` (string, optional): The new name for the object.\n    \n- `data` (object, optional): Additional data for the object including year, price, CPU model, and hard disk size.\n    \n\n#### Response\n\n- Status: 200\n    \n- Content-Type: application/json\n    \n\nThe response body will contain the details of the object, including its ID, name, and some data that describes that object.\n\n##### Example response:\n\n``` json\n{\n    \"id\": \"ff80818191b6f0300191b783d8790271\",\n    \"name\": \"Apple MacBook Pro 16\",\n    \"createdAt\": \"2024-09-03T10:52:36.858+00:00\",\n    \"data\": {\n        \"year\": 2019,\n        \"price\": 1849.99,\n        \"CPU model\": \"Intel Core i9\",\n        \"Hard disk size\": \"1 TB\"\n    }\n}\n\n ```"
					},
					"response": []
				}
			],
			"id": "d2143a00-7297-4834-beb8-2393927696ae"
		},
		{
			"name": "3. vjezba - Varijable",
			"item": [],
			"id": "1edbb94c-e1f7-45d4-ab8d-75ac60505b31"
		},
		{
			"name": "4. vjezba - Testiranje",
			"item": [
				{
					"name": "GetObject",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9e31bbff-6db1-46b4-b0b1-e6e40193c957",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var responseJson = pm.response.json();",
									"",
									"pm.test(\"Object id\", function() {",
									"    pm.expect(responseJson).to.have.property(\"id\");",
									"    pm.expect(responseJson[\"id\"]).to.equal(pm.collectionVariables.get(\"object_id\"));",
									"});",
									"",
									"pm.test(\"Object to have name\", function() {",
									"    pm.expect(responseJson).to.have.property(\"name\");",
									"});",
									"",
									"pm.test(\"Object to have data\", function() {",
									"    pm.expect(responseJson).to.have.property(\"data\");",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "41a52745-4030-4393-8acd-b5446d45c54c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/objects/:object_id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"objects",
								":object_id"
							],
							"variable": [
								{
									"key": "object_id",
									"value": "{{object_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateObject",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c4aeb260-80ae-4013-bcf5-c98420fc6a08",
								"exec": [
									"var name = \"Just another test object\";",
									"var data = {",
									"    \"year\": 2024,",
									"    \"price\": 20",
									"};",
									"",
									"pm.environment.set(\"object_name\", name);",
									"pm.environment.set(\"object_data\", data);",
									"",
									"pm.request.headers.add({",
									"    key: 'Content-Type',",
									"    value: 'application/json'",
									"});",
									"",
									"pm.request.body.update(JSON.stringify({",
									"    name: name,",
									"    data: data",
									"}));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "13e81c3a-dc95-494b-a8cf-2684c0ce857b",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var responseJson = pm.response.json();",
									"",
									"pm.test(\"Object has correct name\", function() {",
									"    pm.expect(responseJson).to.have.property(\"name\");",
									"    pm.expect(responseJson.name).to.equal(pm.environment.get(\"object_name\"));",
									"});",
									"",
									"pm.test(\"Object has data\", function() {",
									"    pm.expect(responseJson).to.have.property(\"data\"); ",
									"});",
									"",
									"var data = pm.environment.get(\"object_data\");",
									"",
									"pm.test(\"Object has correct year\", function() {",
									"    pm.expect(responseJson.data.year).to.equal(data.year);",
									"});",
									"",
									"pm.test(\"Object has correct price\", function() {",
									"    pm.expect(responseJson.data.price).to.equal(data.price);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "bd0be056-8a4b-4fa5-9721-afb02a7fdbe9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/objects"
					},
					"response": []
				}
			],
			"id": "cd015da7-eaf9-498a-bd2c-bc61211dcc72"
		},
		{
			"name": "5. vjezba - Run Collection",
			"item": [],
			"id": "6c152e47-bcf8-400b-95d2-fc20c5f59207"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "83647fc4-1cfd-4f36-9148-f4f042303856",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "be5f9e08-17cd-46c8-a81e-076dd6717da4",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://api.restful-api.dev",
			"type": "string"
		},
		{
			"key": "object_id",
			"value": "ff80818191c06f6b0191c111a7010205",
			"type": "string"
		}
	]
}